.panel.panel-default
  .panel-heading 
    %h5.panel-title 2. Candidate Settings
  .panel-body
    .row
      .col-md-6
        = f.input :source_text, input_html: { class: 'form-control', value: f.object.source_text.present? ? f.object.source_text : 'Company Website' }

        = f.input :status_text, input_html: { class: 'form-control', value: f.object.status_text.present? ? f.object.status_text : 'New Lead' }

        = f.input :cv_type_text, input_html: { class: 'form-control', value: f.object.cv_type_text.present? ? f.object.cv_type_text : 'CV' }
      .col-md-6
        = f.input :always_create, collection: [['Try and update existing candidate records', false], ['Always create a new candidate record', true]], as: :radio_buttons, input_html: { class: 'form-control' }
    %hr
    .row
      .col-xs-12
        %h6 Candidate Fields Mappings
        - if @bh_candidate_fields.blank?
          .alert.alert-danger
            Retrieving the latest data for your candidate fields from Bullhorn took too long, please refresh the page to try again. If the problem persists please contact Volcanic support.
            (Error ID: #{@net_error})
        - else
          %p
            Here you can set how registration fields within your Volcanic website correspond to fields within your Bullhorn application.
            Only the data set up here will be sent to Bullhorn when a Candidate registers.
          %a.btn.btn-primary{"aria-controls" => "collapse-candidate-fields", "aria-expanded" => "false", "data-toggle" => "collapse", :href => "#collapse-candidate-fields"}
            Mappings
            %i.fa.fa-lg.fa-angle-down
          #collapse-candidate-fields.collapse
            .mappings
              %table.table
                %thead
                  %th Volcanic Candidate Field
                  %th
                  %th Bullhorn Candidate Field
                %tbody
                  %tr
                    %td LinkedIn Public URL
                    %td.text-center
                      %i.icon-arrow-right16
                    %td= f.input :linkedin_bullhorn_field, collection: @bh_candidate_fields, label: false, include_blank: true, input_html: { class: 'form-control' }
                  = f.simple_fields_for :bullhorn_field_mappings, @bullhorn_setting.bullhorn_field_mappings.select { |m| m.job_attribute.nil? } do |bfm|
                    %tr
                      %td
                        - if @volcanic_candidate_fields[bfm.object.registration_question_reference].present?
                          = @volcanic_candidate_fields[bfm.object.registration_question_reference]
                        - else
                          = bfm.object.registration_question_reference
                          %i.icon-alert.text-danger{ 'data-toggle' => "tooltip", 'data-placement' => "top", 'title' => "The question this reference refers to no longer exists!" }
                        = bfm.input :registration_question_reference, as: :hidden
                      %td.text-center
                        %i.icon-arrow-right16
                      %td= bfm.input :bullhorn_field_name, collection: @bh_candidate_fields, label: false, include_blank: true, input_html: { class: 'form-control' }
:javascript
  $( "a.btn" ).click(function() {
    console.log('clicked');
    if ($(this).find( "i" ).hasClass('fa-rotate-180')){
      console.log('yes');
      $(this).find( "i" ).removeClass('fa-rotate-180');
    }else{
      console.log('no');
      $(this).find( "i" ).addClass('fa-rotate-180');
    }
    
  });